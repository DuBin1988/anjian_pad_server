<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" 
			 xmlns:a="clr-namespace:Com.Aote.Attachs;assembly=s2DLL"
			 xmlns:m="clr-namespace:Com.Aote.Marks;assembly=s2DLL"		 
    		 xmlns:o="clr-namespace:Com.Aote.ObjectTools;assembly=s2DLL"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ec="http://schemas.microsoft.com/expression/2010/controls"
			 xmlns:con="clr-namespace:Com.Aote.Converters" 
             xmlns:att="clr-namespace:Com.Sellgas.AttachProperties"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
             xmlns:System="clr-namespace:System;assembly=mscorlib"            
	         x:Class="Com.Aote.Pages.MainPage" x:Name="mainpage"

	         mc:Ignorable="d" Width="1440" Height="900" FontFamily="/qhrepairs;component/Fonts/Fonts.zip#Microsoft YaHei" FontSize="12">
    
    <UserControl.Resources>
		<con:StartConverter x:Key="startConver"></con:StartConverter>
    	<con:WidthConverter x:Key="widthConver"></con:WidthConverter>

        <!-- 菜单ListBoxItem默认样式 -->
        <Style TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border" Padding="0" CornerRadius="3" Margin="0">
                    		<Border.Background>
                    			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    				<GradientStop Color="White" Offset="0"/>
                    				<GradientStop Color="White" Offset="1"/>
                    			</LinearGradientBrush>
                    		</Border.Background>
                    		<VisualStateManager.VisualStateGroups>
                    			<VisualStateGroup x:Name="CommonStates">
                    				<VisualState x:Name="Normal">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="MouseOver">
                    					<Storyboard>
                    						<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                    						<ColorAnimation Duration="0" To="#FFF2F5F9" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    						<ColorAnimation Duration="0" To="#FFC4D2E4" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="Disabled">
                    					<Storyboard>
                    						<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    			</VisualStateGroup>
                    			<VisualStateGroup x:Name="SelectionStates">
                    				<VisualState x:Name="Unselected">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="Selected">
                    					<Storyboard>
                    						<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor2"/>
                    						<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="fillColor2"/>
                    						<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="fillColor2"/>
                    						<ColorAnimation Duration="0" To="#FFBDCCE1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    						<ColorAnimation Duration="0" To="#FFEDF1F7" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="SelectedUnfocused">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    			</VisualStateGroup>
                    			<VisualStateGroup x:Name="FocusStates">
                    				<VisualState x:Name="Focused">
                    					<Storyboard>
                    						<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                    							<DiscreteObjectKeyFrame KeyTime="0">
                    								<DiscreteObjectKeyFrame.Value>
                    									<Visibility>Visible</Visibility>
                    								</DiscreteObjectKeyFrame.Value>
                    							</DiscreteObjectKeyFrame>
                    						</ObjectAnimationUsingKeyFrames>
                    						<ColorAnimation Duration="0" To="#FFEDF1F7" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    						<ColorAnimation Duration="0" To="#FFBDCCE1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border"/>
                    						<DoubleAnimation Duration="0" To="3" Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="FocusVisualElement"/>
                    						<DoubleAnimation Duration="0" To="3" Storyboard.TargetProperty="(Rectangle.RadiusY)" Storyboard.TargetName="FocusVisualElement"/>
                    						<ColorAnimation Duration="0" To="#00BECDE2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="FocusVisualElement"/>
                    						<ColorAnimation Duration="0" To="#00ECF0F6" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="FocusVisualElement"/>
                    						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="FocusVisualElement"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="Unfocused">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    			</VisualStateGroup>
                    			<VisualStateGroup x:Name="LayoutStates">
                    				<VisualState x:Name="AfterLoaded">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="BeforeLoaded">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    				<VisualState x:Name="BeforeUnloaded">
                    					<Storyboard>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    						<ColorAnimation Duration="0" To="Transparent" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                    					</Storyboard>
                    				</VisualState>
                    			</VisualStateGroup>
                    		</VisualStateManager.VisualStateGroups>
                    		<Grid Background="{TemplateBinding Background}" Height="29" Margin="0">
                    			<Rectangle x:Name="fillColor" Fill="#00BADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                    			<Rectangle x:Name="fillColor2" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1">
                    				<Rectangle.Fill>
                    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    						<GradientStop Color="Black" Offset="0"/>
                    						<GradientStop Color="White" Offset="1"/>
                    					</LinearGradientBrush>
                    				</Rectangle.Fill>
                    			</Rectangle>
                    			<Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="#006DBDD1" StrokeThickness="1" Visibility="Collapsed">
                    				<Rectangle.Fill>
                    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    						<GradientStop Color="Black" Offset="0"/>
                    						<GradientStop Color="White" Offset="1"/>
                    					</LinearGradientBrush>
                    				</Rectangle.Fill>
                    			</Rectangle>
                    			<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" Margin="0"/>
                    		</Grid>
                    	</Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 左边按钮收缩效果 -->
        <Storyboard x:Name="MainCanvasStoryboardIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="-1011"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvasleft">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                	<DiscreteObjectKeyFrame.Value>
                		<Visibility>Visible</Visibility>
                	</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="MainCanvasStoryboardOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="canvasleft">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1011"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="canvasleft">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvasleft">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvasleft">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                	<DiscreteObjectKeyFrame.Value>
                		<Visibility>Visible</Visibility>
                	</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <!-- 右边按钮收缩效果 -->
        <Storyboard x:Name="MainCanvasrightStoryboardIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="1409"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvasleft">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                	<DiscreteObjectKeyFrame.Value>
                		<Visibility>Visible</Visibility>
                	</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="MainCanvasrightStoryboardOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1409"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="canvasleft">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvasleft">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvasleft">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                	<DiscreteObjectKeyFrame.Value>
                		<Visibility>Visible</Visibility>
                	</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <!-- canvasbottom打开效果 -->
        <Storyboard x:Name="CanvasBottomStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvasbottom">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- 转动菜单效果 -->
        <Storyboard x:Key="OnLoaded1">
            <!-- 产生依附运动的动画对象 -->
            <DoubleAnimation x:Name="da" Duration="00:00:01" SpeedRatio="1.6" Storyboard.TargetProperty="(ec:PathListBox.LayoutPaths)[0].(ec:LayoutPath.Start)" Storyboard.TargetName="menus" To="0.08"/>
        </Storyboard>
    </UserControl.Resources>
	<Grid x:Name="LayoutRoot" Background="White">
	<m:ResourceLoad Margin="0,0,-101,0">
            <o:ChildWindowObj Name="openchild" CWName="/Pages/修改密码" />

            <o:ObjectList Name="selects"></o:ObjectList>
	</m:ResourceLoad>		
		<Grid>
		<Grid.ColumnDefinitions>
            <ColumnDefinition Width="33"/>
            <ColumnDefinition Width="1375"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="29"/>
            <RowDefinition Height="52"/>
            <RowDefinition Height="642"/>
            <RowDefinition Height="0.401*"/>
        </Grid.RowDefinitions>
        <Image Margin="0" Source="./Images/主界面背景.jpg" Grid.RowSpan="5" Grid.ColumnSpan="3" Width="1440" Height="900"/>
        <Canvas  x:Name="canvasleft" Grid.Column="1" Margin="0" Grid.Row="3" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Canvas.RenderTransform>
                <CompositeTransform TranslateX="-1011" TranslateY="1" />
            </Canvas.RenderTransform>
        </Canvas>
        <Canvas x:Name="canvasbottom" Grid.Column="1" Margin="0" Grid.Row="3" RenderTransformOrigin="0.5,0.5"/>
        <sdk:TabControl d:LayoutOverrides="Width, Height" Grid.Column="1" Grid.Row="3"
		Visibility="{m:Exp Str=selects.Top\=\=null:$Collapsed$\,$Visible$}">
        	<sdk:TabItem Header="{m:Exp Str=selects.Top.name}">
        		<Grid a:ControlAttach.PageName="{m:Exp Str=selects.Top.link}" x:Name="frame">
        		</Grid>
        	</sdk:TabItem>
        </sdk:TabControl>
       
        <ec:PathListBox x:Name="menus" WrapItems="False" MouseLeftButtonUp="menus_MouseLeftButtonUp" SelectionChanged="PathListBox_SelectionChanged" Margin="0,58.464,0,52" Width="1375" Grid.Column="1" Grid.Row="4">
         <!--   <tri:Triggers.BindingManager>
                <tri:DoBindings>
                    <tri:MBinding ElementName="acOperator" Path="DataContext[menus]" TargetProperty="ItemsSource" />
                </tri:DoBindings>
            </tri:Triggers.BindingManager> -->
            <ec:PathListBox.LayoutPaths>
                <ec:LayoutPath x:Name="plblp" SourceElement="{Binding ElementName=path}" Capacity="6" Distribution="Even" FillBehavior="NoOverlap"
                               Start="{Binding ItemsSource, ConverterParameter=6, Converter={StaticResource startConver}, ElementName=menus}"/>
            </ec:PathListBox.LayoutPaths>

            <ec:PathListBox.ItemTemplate>
                <DataTemplate>
                    <Viewbox x:Name="viewbox" Height="95" Margin="0" Width="90" >
                        <Viewbox.Resources>
                            <!--菜单动画效果-->
                            <Storyboard x:Name="viewboxStoryboardIn">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="viewbox">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="112"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="viewbox">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="115"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF323958"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF7D8095"/>
                                </ColorAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="viewboxStoryboardOut">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="viewbox">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="90"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="viewbox">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <SplineColorKeyFrame KeyTime="0:0:0.5" Value="#FF1D223A"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <SplineColorKeyFrame KeyTime="0:0:0.5" Value="#FF62657F"/>
                                </ColorAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </Viewbox.Resources>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                               
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">

                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisualStateGroup">
                                <VisualState x:Name="selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <Grid Height="95" Width="90">
                            <Image x:Name="image" Margin="-27,-43,-36,-15" Width="100" Height="100" Source="./Images/按钮发光背景.png" Visibility="Collapsed"/>
                            <Image Margin="0,8,0,0" Width="58" Height="58" VerticalAlignment="Top" Source="{Binding icon}" HorizontalAlignment="Center"/>
                            <Border x:Name="border" HorizontalAlignment="Center"  VerticalAlignment="Bottom" Width="120" Height="23" CornerRadius="3" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                      
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF62657F" Offset="0"/>
                                        <GradientStop Color="#FF1D223A" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <sdk:Label Content="{Binding name}"  HorizontalAlignment="Center" Height="18" Foreground="{StaticResource FontWhiteColorBrush}" Style="{StaticResource MenuBtnFont20130336}" />
                            </Border>
                            <ListBox Visibility="{Binding childsShow, Mode=OneWay}" MouseEnter="ListBox_MouseEnter" MouseLeave="ListBox_MouseLeave" ItemsSource="{m:Exp Str=data.children}" Margin="-8,-500,-52,94" VerticalAlignment="Bottom" Style="{StaticResource MainMenuListBoxStyle}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                    	<Grid Height="22" Width="120">
                                            <Button Click="{m:Exp Str=selects.Top\=data}" Content="{Binding name}" Height="22" Margin="0" Style="{StaticResource MainMenuButtonStyle}" VerticalAlignment="Center" Foreground="{StaticResource FontWhiteColorBrush}">
                                              <!--  <tri:Triggers.TriggersManager>
                                                    <tri:Triggers>
                                                        <tri:Trigger EventName="Click">
                                                            <tri:SettersAction>
                                                                <tri:SetOperator TargetElementName="menus" TargetPropertyName="SelectedIndex" SetPropertyValue="-1" />
                                                            </tri:SettersAction>
                                                        </tri:Trigger>
                                                    </tri:Triggers>
                                                </tri:Triggers.TriggersManager>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CanvasBottomStoryboard}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers> -->
                                            </Button>
										</Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Viewbox>
                </DataTemplate>
            </ec:PathListBox.ItemTemplate>
        </ec:PathListBox>
        <Path x:Name="path" Grid.Column="1" Data="M154.24994,881.50006 C633.96167,826.81177 832.76105,825.50055 1299.6084,885.5" Margin="108.5,72.486,108.5,55.5" Grid.Row="4" Stretch="Fill" Stroke="#00000000" UseLayoutRounding="False"
              Width="{Binding ItemsSource, ConverterParameter=1158;6, Converter={StaticResource widthConver}, ElementName=menus}" />
        <Button Content="" Click="Button_Click_1" Grid.Column="1" HorizontalAlignment="Left" Height="50" Margin="36,0,0,8" Grid.Row="4" VerticalAlignment="Bottom" Width="50" Style="{StaticResource 左移btn}">
        <!--    <tri:Triggers.BindingManager>
                <tri:DoBindings>
                    <tri:MBinding TargetProperty="Visibility" ElementName="path" Path="Width" Mode="OneWay" IsTrue="1158" />
                </tri:DoBindings>
            </tri:Triggers.BindingManager> -->
        </Button>
        <Button Content="" Click="Button_Click" Grid.Column="1" HorizontalAlignment="Right" Height="50" Margin="0,0,36,8" Grid.Row="4" VerticalAlignment="Bottom" Width="50" Style="{StaticResource 右移btn}">
         <!--   <tri:Triggers.BindingManager>
                <tri:DoBindings>
                	<tri:MBinding TargetProperty="Visibility" ElementName="path" Path="Width" Mode="OneWay" IsTrue="1158" />
                </tri:DoBindings>
            </tri:Triggers.BindingManager> -->
        </Button>
        <!--Button x:Name="modifypass" Height="26" Margin="0,13,146,-10" Grid.Row="1"   Padding="3,3,0,3" Grid.Column="1" HorizontalAlignment="Right" Width="100" VerticalAlignment="Stretch"-->
        	<!-- <tri:Triggers.TriggersManager>
                            <tri:Triggers>
                                <tri:Trigger EventName="Click">
                                    <tri:OpenPageAction PageName="密码修改" ParentElementName="LayoutRoot" />
                                </tri:Trigger>
                            </tri:Triggers>
			  </tri:Triggers.TriggersManager> -->
        	<!--Grid Height="21" Width="90">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="0.294*"/>
        			<ColumnDefinition Width="0.706*"/>
        		</Grid.ColumnDefinitions>
        		<sdk:Label Grid.Column="1" Margin="0,0,8,1" Content="修改密码" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        		<Image Margin="0" Width="18" Height="18" Source="../imagebtnicon/密码修改.png"/>
        	</Grid>
        </Button-->
		<Canvas Margin="0,14,2,0" Grid.Row="2" Height="24" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Width="250">
			<Image Height="24" Width="26" Source="time.png" Canvas.Top="1" Canvas.Left="3"/>
		<!--	<Com_Aote_Controls:ShowDate Refresh="10" Canvas.Left="32" Canvas.Top="4"/> -->
		</Canvas>
		<Border BorderBrush="Black"   BorderThickness="0" Grid.Column="1" HorizontalAlignment="Right" Margin="0,18,281,0" Grid.Row="2" Width="267" CornerRadius="5" Height="20" VerticalAlignment="Top" Background="{x:Null}">
			<Canvas x:Name="loginUserInfo"   HorizontalAlignment="Stretch" Margin="0,-2,0,5" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
				<sdk:Label Style="{StaticResource LabelStyle2}" Content="{m:Exp Str=LoginUser.name}"  FontSize="13.333"  Margin="0" Height="24" Width="99" Canvas.Left="73" />
				<sdk:Label Style="{StaticResource LabelStyle2}" Canvas.Left="176" Margin="0" Height="24" FontSize="13.333"  Content="工号:" RenderTransformOrigin="1.706,0.556"  />
	
				<sdk:Label Style="{StaticResource LabelStyle2}" Content="{m:Exp Str=LoginUser.ename}" Canvas.Left="216" Margin="0" Height="24" FontSize="13.333" RenderTransformOrigin="1.706,0.556" Width="Auto"  />
				<sdk:Label Style="{StaticResource LabelStyle2}"  Margin="0" Height="24"  FontSize="13.333"  Content="用户名:"   Width="52" Canvas.Left="17" />
			</Canvas>
		</Border>
            <Button   Width="30" Height="25"  
		        Visibility="{m:Exp Str=selects.Top\=\=null:$Collapsed$\,$Visible$}" Style="{StaticResource TopMinButtonStyle1}" Canvas.ZIndex="2" d:LayoutOverrides="Height, GridBox"
		        Click="{m:Exp Str=frame.RemoveTop();selects.RemoveTop()}" Grid.Column="1" HorizontalAlignment="Right"   Grid.Row="3" VerticalAlignment="Top">
                <Grid Height="9" Width="14">
                    <Path Data="M9.5939989,6.5 L0.5,0.5 M0.50048506,6.5 L9.5944843,0.5" HorizontalAlignment="Left" Margin="2,1,0,1" Stretch="Fill" UseLayoutRounding="False" Width="10.094">
                        <Path.Stroke>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <!--GradientStop Color="#FFB4B3B3" Offset="1"/>
                                <GradientStop Color="White"/>
                                <GradientStop Color="#FFFBF9F9" Offset="0.504"/>
                                <GradientStop Color="#FFB4B3B3" Offset="0.509"/-->

                                <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                <GradientStop Color="#FF718597" Offset="0.375"/>
                                <GradientStop Color="#FF516891" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Stroke>
                    </Path>
                </Grid>               
            </Button>
            <!--<Button Content="修改密码"  
			    Click="{m:Exp Str=openchild.IsOpen\=True}" Grid.Column="1" HorizontalAlignment="Right"  Margin="0,2,95,0" Grid.Row="0" VerticalAlignment="Center"  Style="{StaticResource TopPasswordButtonStyle}" Foreground="{StaticResource FontColorBrush2}" Width="68" Height="25" >
            	<Button.BorderBrush>
            		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            			<GradientStop Color="#FFA3AEB9" Offset="0"/>
            			<GradientStop Color="#FF8399A9" Offset="0.375"/>
            			<GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF516891" Offset="1"/>
                    </LinearGradientBrush>
            	</Button.BorderBrush>
            </Button>-->
            <Button  Content="退出系统"
			Click="{m:Exp Str=LoginUser.IsInit\=True;MainFrame.SetSource($/Login$)}" Grid.Column="1" HorizontalAlignment="Right" Height="25" Margin="-69,2,7,0"  Grid.Row="0" VerticalAlignment="Center" Width="85" Style="{StaticResource TopCloseButtonStyle}" Foreground="{StaticResource FontColorBrush2}"/>
           
        </Grid>
        
	</Grid>
    
</UserControl>